package com.example.fitappa.Workout;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;

public class TrackWorkouts implements Serializable {
    private final List<Workout> workouts;
    private Workout currWorkout;

    /**
     * Creates a workout tracker with an empty history
     */
    public TrackWorkouts() {
        this.workouts = new ArrayList<Workout>();
    }

    /**
     * @return The total volume generated by all the workouts in the tracker.
     */
    public double getTotalVolume() {
        return 0;
    }

    /**
     * @return The average duration of a workout in the tracker
     */
    public double getAvgDuration() {
        /*double sum = 0;

        for (WorkoutTemplate workoutTemplate : this.workoutTemplateHistory) {
            sum += workoutTemplate.calc().toMinutes();
        }

        return sum / this.workoutTemplateHistory.size();*/
        return 0;
    }


    /**
     * This method starts a workout. A workout can be started iff there is no unfinished workout.
     *
     * @param workoutTemplate - The workout that is to be started
     * @return True iff the workout was successfully started
     */
    public boolean track(WorkoutTemplate workoutTemplate) {
        if(this.isTracking()) return false;
        this.currWorkout = workoutTemplate.createWorkout();
        return true;
    }

    public boolean isTracking() {
        return this.currWorkout != null;
    }


}
